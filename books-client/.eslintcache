[{"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddBook.js":"1","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\Book.js":"2","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\BooksList.js":"3","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddPublisher.js":"4","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\services\\PublisherService.js":"5","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\http-common.js":"6","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\PublishersList.js":"7","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\App.js":"8"},{"size":5968,"mtime":1607096102139,"results":"9","hashOfConfig":"10"},{"size":7286,"mtime":1607096121118,"results":"11","hashOfConfig":"10"},{"size":5663,"mtime":1607092521888,"results":"12","hashOfConfig":"10"},{"size":3101,"mtime":1607090293232,"results":"13","hashOfConfig":"10"},{"size":424,"mtime":1607085864848,"results":"14","hashOfConfig":"10"},{"size":196,"mtime":1607084323711,"results":"15","hashOfConfig":"10"},{"size":3545,"mtime":1607095904896,"results":"16","hashOfConfig":"10"},{"size":1888,"mtime":1607093475699,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"24cyhz",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddBook.js",["35","36","37"],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\Book.js",["38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BookDataService from \"../services/BookService\";\r\n\r\nconst Book = (props) => {\r\n  const { register, handleSubmit, errors, formState } = useForm();\r\n  const initialBookState = {\r\n    id: null,\r\n    title: \"\",\r\n    author: \"\",\r\n    rating: \"\",\r\n    pages: \"\",\r\n    language: \"\",\r\n    description: \"\",\r\n    publisher: \"\",\r\n    published: false,\r\n  };\r\n  const [currentBook, setCurrentBook] = useState(initialBookState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getBook = (id) => {\r\n    BookDataService.get(id)\r\n      .then((response) => {\r\n        setCurrentBook(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBook(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentBook({ ...currentBook, [name]: value });\r\n  };\r\n\r\n  const updatePublished = (status) => {\r\n    var data = {\r\n      id: currentBook.id,\r\n      title: currentBook.title,\r\n      author: currentBook.author,\r\n      rating: currentBook.rating,\r\n      pages: currentBook.pages,\r\n      language: currentBook.language,\r\n      description: currentBook.description,\r\n      publisher: currentBook.publisher,\r\n      published: status,\r\n    };\r\n\r\n    BookDataService.update(currentBook.id, data)\r\n      .then((response) => {\r\n        setCurrentBook({ ...currentBook, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateBook = () => {\r\n    BookDataService.update(currentBook.id, currentBook)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setMessage(\"The book was updated successfully!\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteBook = () => {\r\n    BookDataService.remove(currentBook.id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        props.history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (formState.errors.data) return;\r\n    updateBook();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentBook ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Book</h4>\r\n          <form className=\"submit-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">\r\n                Title<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={register({ required: true })}\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={currentBook.title}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.title && \"Title is required\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"author\">\r\n                Author<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={register({ required: true })}\r\n                id=\"author\"\r\n                name=\"author\"\r\n                value={currentBook.author}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.author && \"Author is required\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rating\">Rating</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                ref={register({ min: 0, max: 5 })}\r\n                id=\"rating\"\r\n                name=\"rating\"\r\n                value={currentBook.rating}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.rating &&\r\n                  \"Invalid number for rating. Add a number between 0 and 5.\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pages\">\r\n                Pages<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                ref={register({ min: 0, required: true })}\r\n                id=\"pages\"\r\n                name=\"pages\"\r\n                value={currentBook.pages}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.pages?.type == \"required\" && \"Pages is required\"}\r\n                {errors.pages?.type == \"min\" &&\r\n                  \"Please add a positive number for pages.\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"language\">language</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"language\"\r\n                name=\"language\"\r\n                value={currentBook.language}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={currentBook.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div htmlFor=\"publisher.id\">\r\n              <select className=\"form-control\">\r\n                <option>Please choose a publisher</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>\r\n              {currentBook.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n            {currentBook.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button className=\"badge badge-danger mr-2\" onClick={deleteBook}>\r\n              Delete\r\n            </button>\r\n\r\n            <button type=\"submit\" className=\"badge badge-success\">\r\n              Update\r\n            </button>\r\n            <p>{message}</p>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Book...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\BooksList.js",["40"],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddPublisher.js",[],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\services\\PublisherService.js",["41"],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\http-common.js",[],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\PublishersList.js",["42","43"],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\App.js",[],{"ruleId":"44","severity":1,"message":"45","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":147,"column":35,"nodeType":"50","messageId":"51","endLine":147,"endColumn":37},{"ruleId":"48","severity":1,"message":"49","line":148,"column":35,"nodeType":"50","messageId":"51","endLine":148,"endColumn":37},{"ruleId":"48","severity":1,"message":"49","line":161,"column":37,"nodeType":"50","messageId":"51","endLine":161,"endColumn":39},{"ruleId":"48","severity":1,"message":"49","line":162,"column":37,"nodeType":"50","messageId":"51","endLine":162,"endColumn":39},{"ruleId":"44","severity":1,"message":"52","line":12,"column":10,"nodeType":"46","messageId":"47","endLine":12,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":20,"column":1,"nodeType":"55","endLine":25,"endColumn":3},{"ruleId":"44","severity":1,"message":"52","line":10,"column":10,"nodeType":"46","messageId":"47","endLine":10,"endColumn":22},{"ruleId":"44","severity":1,"message":"56","line":27,"column":9,"nodeType":"46","messageId":"47","endLine":27,"endColumn":20},"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'currentIndex' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'refreshList' is assigned a value but never used."]