[{"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\App.js":"1","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\pages\\Books.js":"2","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\Book.js":"3","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddBook.js":"4","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\aws-exports.js":"5","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\index.js":"6","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddPublisher.js":"7","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\services\\BookService.js":"8","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\http-common.js":"9"},{"size":1064,"mtime":1608039382476,"results":"10","hashOfConfig":"11"},{"size":1822,"mtime":1607792237621,"results":"12","hashOfConfig":"11"},{"size":7806,"mtime":1607519384172,"results":"13","hashOfConfig":"11"},{"size":5907,"mtime":1607790914882,"results":"14","hashOfConfig":"11"},{"size":469,"mtime":1607798491577,"results":"15","hashOfConfig":"11"},{"size":478,"mtime":1606738902325,"results":"16","hashOfConfig":"11"},{"size":3101,"mtime":1607090293232,"results":"17","hashOfConfig":"11"},{"size":947,"mtime":1608049908465,"results":"18","hashOfConfig":"11"},{"size":491,"mtime":1608063278110,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"24cyhz",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\App.js",["44"],"import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Books from \"./pages/Books\";\nimport Amplify from \"aws-amplify\";\nimport {\n  AmplifyAuthenticator,\n  AmplifySignOut,\n  AmplifySignUp,\n  AmplifySignIn,\n} from \"@aws-amplify/ui-react\";\nimport awsconfig from \"./aws-exports\";\n\nAmplify.configure(awsconfig);\n\nfunction App() {\n  return (\n    <AmplifyAuthenticator usernameAlias=\"email\">\n      <AmplifySignUp\n        slot=\"sign-up\"\n        usernameAlias=\"email\"\n        formFields={[\n          {\n            type: \"email\",\n            label: \"Email\",\n            placeholder: \"Email\",\n            required: true,\n          },\n          {\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Password\",\n            required: true,\n          },\n        ]}\n      />\n      <AmplifySignIn\n        slot=\"sign-in\"\n        usernameAlias=\"email\"\n        className=\"signInForm\"\n      />\n      <AmplifySignOut />\n      <Books />\n    </AmplifyAuthenticator>\n  );\n}\n\nexport default App;\n",["45","46"],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\pages\\Books.js",["47"],"import React, { Component } from \"react\";\r\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport AddBook from \"../components/AddBook\";\r\nimport Book from \"../components/Book\";\r\nimport BooksList from \"../components/BooksList\";\r\nimport AddPublisher from \"../components/AddPublisher\";\r\nimport PublishersList from \"../components/PublishersList\";\r\n\r\nconst Books = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <a href=\"/books\" className=\"navbar-brand\">\r\n          BooksLIB\r\n        </a>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/books\"} className=\"nav-link\">\r\n              Library\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/publishersList\"} className=\"nav-link\">\r\n              Publishers\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/add\"} className=\"nav-link\">\r\n              Add Book\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/addpublisher\"} className=\"nav-link\">\r\n              Add Publisher\r\n            </Link>\r\n          </li>\r\n        </div>\r\n      </nav>\r\n      <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/books\"]} component={BooksList} />\r\n          <Route path=\"/publishersList\" component={PublishersList} />\r\n          <Route exact path=\"/add\" component={AddBook} />\r\n          <Route exact path=\"/addpublisher\" component={AddPublisher} />\r\n          <Route path=\"/books/:id\" component={Book} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n",["48","49"],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\Book.js",["50","51"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BookDataService from \"../services/BookService\";\r\nimport PublisherDataService from \"../services/PublisherService\";\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Book = (props) => {\r\n  const { register, handleSubmit, errors, formState } = useForm();\r\n  const [options, setOptions] = useState([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, []);\r\n  const initialBookState = {\r\n    id: null,\r\n    title: \"\",\r\n    author: \"\",\r\n    rating: \"\",\r\n    pages: \"\",\r\n    language: \"\",\r\n    description: \"\",\r\n    publisher: {},\r\n    published: false,\r\n  };\r\n  const [currentBook, setCurrentBook] = useState(initialBookState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getBook = (id) => {\r\n    BookDataService.get(id)\r\n      .then((response) => {\r\n        setCurrentBook(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBook(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setCurrentBook({ ...currentBook, [name]: value });\r\n  };\r\n\r\n  const updatePublished = (status) => {\r\n    var data = {\r\n      id: currentBook.id,\r\n      title: currentBook.title,\r\n      author: currentBook.author,\r\n      rating: currentBook.rating,\r\n      pages: currentBook.pages,\r\n      language: currentBook.language,\r\n      description: currentBook.description,\r\n      publisher: options.value,\r\n      published: status,\r\n    };\r\n\r\n    BookDataService.update(currentBook.id, data)\r\n      .then((response) => {\r\n        setCurrentBook({ ...currentBook, published: status });\r\n        console.log(response.data);\r\n        history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateBook = () => {\r\n    BookDataService.update(currentBook.id, currentBook)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setMessage(\"The book was updated successfully!\");\r\n        history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteBook = () => {\r\n    BookDataService.remove(currentBook.id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        props.history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (formState.errors.data) return;\r\n    updateBook();\r\n  };\r\n\r\n  const getOptions = () => {\r\n    PublisherDataService.getDropDown()\r\n      .then((response) => {\r\n        setOptions(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentBook ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Book</h4>\r\n          <form className=\"submit-form\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">\r\n                Title<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={register({ required: true })}\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={currentBook.title}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.title && \"Title is required\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"author\">\r\n                Author<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                ref={register({ required: true })}\r\n                id=\"author\"\r\n                name=\"author\"\r\n                value={currentBook.author}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.author && \"Author is required\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rating\">Rating</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                ref={register({ min: 0, max: 5 })}\r\n                id=\"rating\"\r\n                name=\"rating\"\r\n                value={currentBook.rating}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.rating &&\r\n                  \"Invalid number for rating. Add a number between 0 and 5.\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pages\">\r\n                Pages<span className=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                ref={register({ min: 0, required: true })}\r\n                id=\"pages\"\r\n                name=\"pages\"\r\n                value={currentBook.pages}\r\n                onChange={handleInputChange}\r\n              />\r\n              <span className=\"text-danger\">\r\n                {errors.pages?.type == \"required\" && \"Pages is required\"}\r\n                {errors.pages?.type == \"min\" &&\r\n                  \"Please add a positive number for pages.\"}\r\n              </span>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"language\">language</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"language\"\r\n                name=\"language\"\r\n                value={currentBook.language}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={currentBook.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Select onChange={setOptions} options={options} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>\r\n              {currentBook.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n            {currentBook.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button className=\"badge badge-danger mr-2\" onClick={deleteBook}>\r\n              Delete\r\n            </button>\r\n\r\n            <button type=\"submit\" className=\"badge badge-success\">\r\n              Update\r\n            </button>\r\n            <p>{message}</p>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Book...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddBook.js",["52","53","54","55"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport BookDataService from \"../services/BookService\";\r\nimport PublisherDataService from \"../services/PublisherService\";\r\nimport Select from \"react-select\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst AddBook = () => {\r\n  const { register, handleSubmit, errors, formState } = useForm();\r\n  const [options, setOptions] = useState([]);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    getOptions();\r\n  }, []);\r\n\r\n  const initialBookState = {\r\n    id: null,\r\n    title: \"\",\r\n    author: \"\",\r\n    rating: \"\",\r\n    pages: \"\",\r\n    language: \"\",\r\n    description: \"\",\r\n    //   publisher: { options },\r\n    published: false,\r\n  };\r\n  const [book, setBook] = useState(initialBookState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setBook({ ...book, [name]: value });\r\n  };\r\n\r\n  const saveBook = () => {\r\n    var data = {\r\n      title: book.title,\r\n      author: book.author,\r\n      rating: book.rating,\r\n      pages: book.pages,\r\n      language: book.language,\r\n      description: book.description,\r\n      publisher: options.value,\r\n      published: book.published,\r\n    };\r\n\r\n    BookDataService.create(data)\r\n      .then((response) => {\r\n        setBook({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          author: response.data.author,\r\n          rating: response.data.rating,\r\n          pages: response.data.pages,\r\n          language: response.data.language,\r\n          description: response.data.description,\r\n          publisher: response.data.publisher,\r\n          published: response.data.published,\r\n        });\r\n        setSubmitted(true);\r\n        history.push(\"/books\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n  const onSubmit = (data, e) => {\r\n    if (formState.errors.data) return;\r\n    saveBook();\r\n  };\r\n\r\n  const getOptions = () => {\r\n    PublisherDataService.getDropDown()\r\n      .then((response) => {\r\n        setOptions(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form className=\"submit-form\" onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n        <h1 className=\"text-center text-info\">Add Book</h1>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">\r\n            Title<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            ref={register({ required: true })}\r\n            id=\"title\"\r\n            value={book.title}\r\n            onChange={handleInputChange}\r\n            name=\"title\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.title && \"Title is required\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"author\">\r\n            Author<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"auth\"\r\n            value={book.author}\r\n            ref={register({ required: true })}\r\n            onChange={handleInputChange}\r\n            name=\"author\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.author && \"Author is required\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"rating\">Rating</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            ref={register({ min: 0, max: 5 })}\r\n            id=\"title\"\r\n            value={book.rating}\r\n            onChange={handleInputChange}\r\n            name=\"rating\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.rating &&\r\n              \"Invalid number for rating. Add a number between 0 and 5.\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"pages\">\r\n            Pages<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"pages\"\r\n            ref={register({ min: 0, required: true })}\r\n            value={book.pages}\r\n            onChange={handleInputChange}\r\n            name=\"pages\"\r\n          />\r\n          <span className=\"text-danger\">\r\n            {errors.pages?.type == \"required\" && \"Pages is required\"}\r\n            {errors.pages?.type == \"min\" &&\r\n              \"Please add a positive number for pages.\"}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"language\">Language</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"language\"\r\n            value={book.language}\r\n            onChange={handleInputChange}\r\n            name=\"language\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Add a short description for this book.\"\r\n            id=\"description\"\r\n            value={book.description}\r\n            onChange={handleInputChange}\r\n            name=\"description\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"publisher\">Publisher</label>\r\n          <Select\r\n            onChange={setOptions}\r\n            options={options}\r\n            onChange={setOptions}\r\n          />\r\n        </div>\r\n        <br></br>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default AddBook;\r\n","C:\\Users\\User\\Desktop\\task2\\books-client\\src\\aws-exports.js",[],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\index.js",[],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\components\\AddPublisher.js",[],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\services\\BookService.js",["56"],"C:\\Users\\User\\Desktop\\task2\\books-client\\src\\http-common.js",[],{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":182,"column":37,"nodeType":"69","messageId":"70","endLine":182,"endColumn":39},{"ruleId":"67","severity":1,"message":"68","line":183,"column":37,"nodeType":"69","messageId":"70","endLine":183,"endColumn":39},{"ruleId":"57","severity":1,"message":"71","line":28,"column":10,"nodeType":"59","messageId":"60","endLine":28,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":154,"column":33,"nodeType":"69","messageId":"70","endLine":154,"endColumn":35},{"ruleId":"67","severity":1,"message":"68","line":155,"column":33,"nodeType":"69","messageId":"70","endLine":155,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":189,"column":13,"nodeType":"74","endLine":189,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":40,"column":1,"nodeType":"77","endLine":47,"endColumn":3},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'submitted' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]